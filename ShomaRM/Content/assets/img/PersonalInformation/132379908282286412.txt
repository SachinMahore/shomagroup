***********************************ApplyNowIndexIndex********************************

<div class="col-sm-4">
                                                <div class="form-group">
                                                    <label for="wizard-picture" class="star">Upload <span id="lblUploadIdentity"></span></label>
                                                    <input class="form-control form-control-small" type="file" id="wizard-picture" value="" />
                                                </div>
                                            </div>


***********************************ApplyNowJs********************************

var saveupdateTenantOnline = function () {
    var msg = "";
    var ProspectID = $("#hdnOPId").val();
    var isInternational = $("#ddlIsInter").val();
    var FirstName = $("#txtFirstNamePersonal").val();
    var MiddleInitial = $("#txtMiddleInitial").val();
    var LastName = $("#txtLastNamePersonal").val();
    var DateOfBirth = $("#txtDateOfBirth").val();
    var Gender = $("#ddlGender").val();
    var Email = $("#txtEmailNew").val();
    var Mobile = $("#txtMobileNumber").val();
    var PassportNumber = $("#txtPassportNum").val();
    var CountryIssuance = $("#txtCOI").val();
    var DateIssuance = $("#txtDateOfIssuance").val();
    var DateExpire = $("#txtDateOfExpiration").val();
    var IDType = $("#ddlDocumentTypePersonal").val();
    var State = $("#ddlStatePersonal").val();
    var IDNumber = $("#txtIDNumber").val();
    var Country = $("#txtCountry").val();
    var HomeAddress1 = $("#txtAddress1").val();
    var HomeAddress2 = $("#txtAddress2").val();
    var StateHome = $("#ddlStateHome").val();
    var CityHome = $("#ddlCityHome").val();
    var ZipHome = $("#txtZip").val();
    var RentOwn = $("#ddlRentOwn").val();
    var MoveInDateFrom = $("#txtMoveInDateFrom").val();
    var MoveInDateTo = $("#txtMoveInDateTo").val();
    var MonthlyPayment = $("#txtMonthlyPayment").val();
    var Reason = $("#txtReasonforleaving").val();

    var Country2 = $("#txtCountry2").val();
    var HomeAddress12 = $("#txtAddress12").val();
    var HomeAddress22 = $("#txtAddress22").val();
    var StateHome2 = $("#ddlStateHome2").val();
    var CityHome2 = $("#ddlCityHome2").val();
    var ZipHome2 = $("#txtZip2").val();
    var RentOwn2 = $("#ddlRentOwn2").val();
    var MoveInDateFrom2 = $("#txtMoveInDateFrom2").val();
    var MoveInDateTo2 = $("#txtMoveInDateTo2").val();
    var MonthlyPayment2 = $("#txtMonthlyPayment2").val();
    var Reason2 = $("#txtReasonforleaving2").val();

    var isAdditionalRHistory = $("#ddladdHistory").val();

    var EmployerName = $("#txtEmployerName").val();
    var JobTitle = $("#txtJobTitle").val();
    var JobType = $("#ddlJobType").val();
    var StartDate = $("#txtStartDate").val();
    var Income = $("#txtAnnualIncome").val();
    var AdditionalIncome = $("#txtAddAnnualIncome").val();
    var SupervisorName = $("#txtSupervisiorName").val();
    var SupervisorPhone = $("#txtSupervisiorPhone").val();
    var SupervisorEmail = $("#txtSupervisiorEmail").val();
    var OfficeCountry = $("#txtCountryOffice").val();
    var OfficeAddress1 = $("#txtofficeAddress1").val();
    var OfficeAddress2 = $("#txtofficeAddress2").val();
    var OfficeState = $("#ddlStateEmployee").val();
    var OfficeCity = $("#ddlCityEmployee").val();
    var OfficeZip = $("#txtZipOffice").val();
    var Relationship = $("#txtRelationship").val();
    var EmergencyFirstName = $("#txtEmergencyFirstName").val();
    var EmergencyLastName = $("#txtEmergencyLastName").val();
    var EmergencyMobile = $("#txtEmergencyMobile").val();
    var EmergencyHomePhone = $("#txtEmergencyHomePhone").val();
    var EmergencyWorkPhone = $("#txtEmergencyWorkPhone").val();
    var EmergencyEmail = $("#txtEmergencyEmail").val();
    var EmergencyCountry = $("#txtEmergencyCountry").val();
    var EmergencyAddress1 = $("#txtEmergencyAddress1").val();
    var EmergencyAddress2 = $("#txtEmergencyAddress2").val();
    var EmergencyStateHome = $("#ddlStateContact").val();
    var EmergencyCityHome = $("#ddlCityContact").val();
    var EmergencyZipHome = $("#txtEmergencyZip").val();
    var OtherGender = $("#txtOtherGender").val();
    var photo = document.getElementById('wizard-picture');

    if (!OtherGender) {
        OtherGender = $("#txtOtherGender").val(" ");
    }

    if (msg != "") {
        $.alert({
            title: "",
            content: msg,
            type: 'red'
        })
        $("#divLoader").hide();
        return;
    }
    $formData = new FormData();
    $formData.append('ProspectID', ProspectID);
    $formData.append('FirstName', FirstName);
    $formData.append('MiddleInitial', MiddleInitial);
    $formData.append('LastName', LastName);
    $formData.append('DateOfBirth', DateOfBirth);
    $formData.append('Gender', Gender);
    $formData.append('Email', Email);
    $formData.append('Mobile', Mobile);
    $formData.append('PassportNumber', PassportNumber);
    $formData.append('CountryIssuance', CountryIssuance);
    $formData.append('DateIssuance', DateIssuance);
    $formData.append('DateExpire', DateExpire);
    $formData.append('IDType', IDType);
    $formData.append('State', State);
    $formData.append('IDNumber', IDNumber);
    $formData.append('Country', Country);
    $formData.append('HomeAddress1', HomeAddress1);
    $formData.append('HomeAddress2', HomeAddress2);
    $formData.append('StateHome', StateHome);
    $formData.append('CityHome', CityHome);
    $formData.append('ZipHome', ZipHome);
    $formData.append('RentOwn', RentOwn);
    $formData.append('MoveInDateFrom', MoveInDateFrom);
    $formData.append('MoveInDateTo', MoveInDateTo);
    $formData.append('MonthlyPayment', MonthlyPayment);
    $formData.append('Reason', Reason);
    $formData.append('Country2', Country2);
    $formData.append('HomeAddress12', HomeAddress12);
    $formData.append('HomeAddress22', HomeAddress22);
    $formData.append('StateHome2', StateHome2);
    $formData.append('CityHome2', CityHome2);
    $formData.append('ZipHome2', ZipHome2);

    $formData.append('RentOwn2', RentOwn2);
    $formData.append('MoveInDateFrom2', MoveInDateFrom2);
    $formData.append('MoveInDateTo2', MoveInDateTo2);
    $formData.append('MonthlyPayment2', MonthlyPayment2);
    $formData.append('Reason2', Reason2);
    $formData.append('EmployerName', EmployerName);
    $formData.append('JobTitle', JobTitle);
    $formData.append('JobType', JobType);
    $formData.append('StartDate', StartDate);
    $formData.append('Income', Income);
    $formData.append('AdditionalIncome', AdditionalIncome);
    $formData.append('SupervisorName', SupervisorName);
    $formData.append('SupervisorPhone', SupervisorPhone);
    $formData.append('SupervisorEmail', SupervisorEmail);
    $formData.append('OfficeCountry', OfficeCountry);
    $formData.append('OfficeAddress1', OfficeAddress1);
    $formData.append('OfficeAddress2', OfficeAddress2);
    $formData.append('OfficeState', OfficeState);
    $formData.append('OfficeCity', OfficeCity);
    $formData.append('OfficeZip', OfficeZip);
    $formData.append('Relationship', Relationship);
    $formData.append('EmergencyFirstName', EmergencyFirstName);
    $formData.append('EmergencyLastName', EmergencyLastName);
    $formData.append('EmergencyMobile', EmergencyMobile);
    $formData.append('EmergencyHomePhone', EmergencyHomePhone);
    $formData.append('EmergencyWorkPhone', EmergencyWorkPhone);
    $formData.append('EmergencyEmail', EmergencyEmail);
    $formData.append('EmergencyCountry', EmergencyCountry);
    $formData.append('EmergencyAddress1', EmergencyAddress1);
    $formData.append('EmergencyAddress2', EmergencyAddress2);
    $formData.append('EmergencyStateHome', EmergencyStateHome);
    $formData.append('EmergencyCityHome', EmergencyCityHome);

    $formData.append('EmergencyZipHome', EmergencyZipHome);
    $formData.append('IsInternational', isInternational);
    $formData.append('IsAdditionalRHistory', isAdditionalRHistory);
    $formData.append('OtherGender', OtherGender);

    for (var i = 0; i < photo.files.length; i++) {
        $formData.append('file-' + i, photo.files[i]);
        console.log(photo.files[i]);
    }

    $.ajax({
        url: '/ApplyNow/SaveTenantOnline',
        type: 'post',
        data: $formData,
        contentType: 'application/json; charset=utf-8',
        contentType: false,
        processData: false,
        dataType: 'json',
        success: function (response) {
            //getApplyNowList(idmsg[0]);

        }
    });
};


$(document).ready(function () {
    $("#ddlIsInter").on("change", function () {
        if ($("#ddlIsInter").val() == '1') {
            $("#ddlDocumentTypePersonal").val('3').attr("disabled", true);
            
            $("#ddlStatePersonal").hide();
            $("#txtIDNumber").hide();
            $("#lblStatePersonal").hide();
            $("#lblIDNumber").hide();
        }
        else {
            $("#ddlDocumentTypePersonal").attr("disabled", false);
            $("#ddlStatePersonal").show();
            $("#txtIDNumber").show();
            $("#lblStatePersonal").show();
            $("#lblIDNumber").show();
        }
    });
});

$(document).ready(function () {
    $("#ddlDocumentTypePersonal").on("change", function () {
        var newText = $('option:selected', this).text();
        $("#lblUploadIdentity").text(newText);
    });
});


*******************************************************ApplyNowController*****************************************

public ActionResult SaveTenantOnline(TenantOnlineModel model)
        {
            try
            {
                HttpPostedFileBase fb = null;
                for (int i = 0; i < Request.Files.Count; i++)
                {
                    fb = Request.Files[i];

                }

                return Json(new { msg = (new TenantOnlineModel().SaveTenantOnline(fb, model)) }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception Ex)
            {
                return Json(new { Ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

**********************************************************TenantOnlineModel***********************************************

public string SaveTenantOnline(HttpPostedFileBase fb, TenantOnlineModel model)
        {
            string msg = "";
            ShomaRMEntities db = new ShomaRMEntities();

            if (model.ProspectID != 0)
            {
                string filePath = "";
                string fileName = "";
                string sysFileName = "";
                if (fb != null && fb.ContentLength > 0)
                {
                    filePath = HttpContext.Current.Server.MapPath("~/Content/assets/img/PassportDocument/");
                    DirectoryInfo di = new DirectoryInfo(filePath);
                    if (!di.Exists)
                    {
                        di.Create();
                    }
                    fileName = fb.FileName;
                    sysFileName = DateTime.Now.ToFileTime().ToString() + Path.GetExtension(fb.FileName);
                    fb.SaveAs(filePath + "//" + sysFileName);
                    if (!string.IsNullOrWhiteSpace(fb.FileName))
                    {
                        string afileName = HttpContext.Current.Server.MapPath("~/Content/assets/img/PassportDocument/") + "/" + sysFileName;

                    }
                }
                var getAppldata = db.tbl_TenantOnline.Where(p => p.ProspectID == model.ProspectID).FirstOrDefault();
                if (getAppldata != null)
                {
                    getAppldata.PassportDocument = sysFileName;
                    getAppldata.IsInternational = model.IsInternational;
                    getAppldata.IsAdditionalRHistory = model.IsAdditionalRHistory;
                    getAppldata.FirstName = model.FirstName;
                    getAppldata.MiddleInitial = model.MiddleInitial;
                    getAppldata.LastName = model.LastName;
                    getAppldata.DateOfBirth = model.DateOfBirth;
                    getAppldata.Gender = model.Gender;
                    getAppldata.Email = model.Email;
                    getAppldata.Mobile = model.Mobile;
                    getAppldata.PassportNumber = model.PassportNumber;
                    getAppldata.CountryIssuance = model.CountryIssuance;
                    getAppldata.DateIssuance = model.DateIssuance;
                    getAppldata.DateExpire = model.DateExpire;
                    getAppldata.IDType = model.IDType;
                    getAppldata.State = model.State;
                    getAppldata.IDNumber = model.IDNumber;
                    getAppldata.Country = model.Country;
                    getAppldata.HomeAddress1 = model.HomeAddress1;
                    getAppldata.HomeAddress2 = model.HomeAddress2;
                    getAppldata.StateHome = model.StateHome;
                    getAppldata.CityHome = model.CityHome;
                    getAppldata.ZipHome = model.ZipHome;
                    getAppldata.RentOwn = model.RentOwn;
                    if (model.MoveInDateFrom > Convert.ToDateTime("01/01/0001 12:00:00 AM"))
                    {
                        getAppldata.MoveInDateFrom = model.MoveInDateFrom;
                        getAppldata.MoveInDateTo = model.MoveInDateTo;
                    }
                    getAppldata.MonthlyPayment = model.MonthlyPayment;
                    getAppldata.Reason = model.Reason;

                    getAppldata.Country2 = model.Country2;
                    getAppldata.HomeAddress12 = model.HomeAddress12;
                    getAppldata.HomeAddress22 = model.HomeAddress22;
                    getAppldata.StateHome2 = model.StateHome2;
                    getAppldata.CityHome2 = model.CityHome2;
                    getAppldata.ZipHome2 = model.ZipHome2;
                    getAppldata.RentOwn2 = model.RentOwn2;

                    if (model.MoveInDateFrom2 > Convert.ToDateTime("01/01/0001 12:00:00 AM"))
                    {
                        getAppldata.MoveInDateFrom2 = model.MoveInDateFrom2;
                        getAppldata.MoveInDateTo2 = model.MoveInDateTo2;
                    }

                    getAppldata.MonthlyPayment2 = model.MonthlyPayment2;
                    getAppldata.Reason2 = model.Reason2;

                    getAppldata.EmployerName = model.EmployerName;
                    getAppldata.JobTitle = model.JobTitle;
                    getAppldata.JobType = model.JobType;
                    getAppldata.StartDate = model.StartDate;
                    getAppldata.Income = model.Income;
                    getAppldata.AdditionalIncome = model.AdditionalIncome;
                    getAppldata.SupervisorName = model.SupervisorName;
                    getAppldata.SupervisorPhone = model.SupervisorPhone;
                    getAppldata.SupervisorEmail = model.SupervisorEmail;
                    getAppldata.OfficeCountry = model.OfficeCountry;
                    getAppldata.OfficeAddress1 = model.OfficeAddress1;
                    getAppldata.OfficeAddress2 = model.OfficeAddress2;
                    getAppldata.OfficeState = model.OfficeState;
                    getAppldata.OfficeCity = model.OfficeCity;
                    getAppldata.OfficeZip = model.OfficeZip;
                    getAppldata.Relationship = model.Relationship;
                    getAppldata.EmergencyFirstName = model.EmergencyFirstName;
                    getAppldata.EmergencyLastName = model.EmergencyLastName;
                    getAppldata.EmergencyMobile = model.EmergencyMobile;
                    getAppldata.EmergencyHomePhone = model.EmergencyHomePhone;
                    getAppldata.EmergencyWorkPhone = model.EmergencyWorkPhone;
                    getAppldata.EmergencyEmail = model.EmergencyEmail;
                    getAppldata.EmergencyCountry = model.EmergencyCountry;
                    getAppldata.EmergencyAddress1 = model.EmergencyAddress1;
                    getAppldata.EmergencyAddress2 = model.EmergencyAddress2;
                    getAppldata.EmergencyStateHome = model.EmergencyStateHome;
                    getAppldata.EmergencyCityHome = model.EmergencyCityHome;
                    getAppldata.EmergencyZipHome = model.EmergencyZipHome;
                    getAppldata.CreatedDate = DateTime.Now.Date;
                    getAppldata.OtherGender = model.OtherGender;



                }
                //db.SaveChanges();

                var saveApplicantGender = db.tbl_Applicant.Where(p => p.Email == model.Email).FirstOrDefault();
                if (saveApplicantGender != null)
                {
                    DateOfBirth = model.DateOfBirth;
                    Gender = model.Gender;
                   
                };
                db.SaveChanges();

                msg = "Applicant Updated Successfully";
            }


            db.Dispose();
            return msg;

        }